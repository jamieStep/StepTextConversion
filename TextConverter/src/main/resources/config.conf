#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Common configuration
#! ====================
#!
#! Each text needs a Metadata/config.conf file, to which end, you should copy
#! this present file and then change it as necessary.
#!
#! There are an awful lot of configuration parameters which you may usefully
#! want to change (usefully in the sense that changing them may actually do
#! something), but for most texts there will be relatively few which you _need_
#! to change, and probably all of them are referred to here, directly or
#! indirectly.
#!
#! In general, the items here split into two categories -- those for which I
#! have already supplied values, and those which I have recorded as requiring
#! a value.
#!
#! Where I have supplied values, it is usually either to force processing to be
#! 'safe' by default (for example to apply validation), or else because there
#! settings which are going to apply to just about all texts.  If you don't like
#! these default settings, you can supply settings of your own in your local
#! copy of the present file, or in files included, directly or indirectly, from
#! that file.
#!
#! Where I have _not_ supplied values, in general it is because it is not
#! possible to come up with a default setting -- for example with things
#! like the website address for the owning organisation.  Here I associate with
#! the parameters the value @Mandatory (indicating that you must supply your own
#! non-blank value for the parameter), or @MandatoryMayBeEmpty (indicating that
#! you must supply your own definition, but the right-hand side of the
#! definition may be empty).
#!
#! Definitions for a given parameter may appear in a number of different files
#! -- for example, we may have a default here, but may also give a Biblica-
#! specific definition in the Biblica.conf file.  In these cases, the processing
#! works through each line of each config file in the order in which they are
#! encountered, and uses the _last_ definition it encounters.  You can force it
#! to use a definition of your own making either by supplying it at the end of
#! your copy of this file, or else by supplying it earlier, but using the
#! format   parm#=value   where the '#' forces this definition to be used in
#! preference to anything encountered later.
#!
#! In summary, therefore, having copied the present file to the Metadata folder
#! for your text, your task is to change your copy of the file as follows:
#!
#! - Set stepFileSelectorForOwnerOrganisation to 'Biblica' on texts supplied by
#!   Biblica.
#!
#! - Set stepFileSelectorForExternalDataFormat to 'Dbl' on texts obtained from
#!   DBL (assuming you want to pick up settings from the DBL metadata).
#!
#! - Check all of the other settings in the present file, and alter or fill
#!   them in as necessary.
#!
#! - Add any other definitions you may require (either directly within your
#!   copy of the present file, or via $include's of your own files).  The
#!   rationale for doing this is somewhat limited, though.  You might do it
#!   in order to override some of the default definitions in the various
#!   configuration files which are stored in the JAR's Resources section;
#!   or you might do it, for example, in order to set up your own
#!   vernacular translations for standard footnote texts (discussed in
#!   more detail below).  Apart from that, there is probably little reason
#!   for you to add your own definitions.
#!
#!
#!
#!
#!
#! Vernacular translations
#! =======================
#!
#! One particular reason for wanting to add extra definitions beyond the ones
#! which appear in this file is so you can provide vernacular translations of
#! the various standard footnote texts which the system uses, or to add your own
#! definitions detailing how scripture references are formatted in the text you
#! are processing.
#!
#! The easiest way to do this is to take your own copy of
#! Resources/ReferenceFormats/referenceFormatVernacularDefaults.conf and / or
#! Resources/TextTranslations/vernacularTextTranslations.conf (or of those
#! definitions within these files which you need to override), and then
#! define things appropriately.
#!
#! You can include these definitions either directly within your copy of
#! config.conf, or within other include files of your own.  (The latter
#! approach has the advantage that if you co-locate the root folders of all
#! texts which have shared requirements in this respect, you can share just
#! one copy of the include files.)
#!
#! If you _do_ opt to use separate include files, I recommend calling them
#! vernacularTextTranslations_xxx.conf or referenceFormats_xxx.conf, where
#! xxx is the 3-character ISO code for the language.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! You can define your own settings here -- either simply because it is useful
#! to do so, or because you wish to override the settings introduced by some of
#! the standard configuration files $include'd here.  By default, a setting
#! encountered later in the processing of the various files overrides one set
#! earlier, so you probably want the definitions here to be of the form:
#!
#!   someName#=someValue (note the hash sign)
#!
#! where the #= lets you give definitions which will _not_ be overridden by
#! later ones.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#! INSERT ANY DEFINITIONS HERE.



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Sometimes we are called upon to process texts which contain systematic
#! issues.  One way of addressing these is to make manual changes to the raw USX
#! before embarking upon the conversion processing.  However, this may be
#! tedious, and such changes may be lost if the text is up-issued at some point.
#!
#! I support two alternatives to this, making it possible to apply changes to
#! the text before the converter runs.
#!
#! One of these is to create a Preprocessor folder under the root for the text,
#! and then place into it a .jar, .exe, .py, .js or .bat file which is passed
#! details of where it can find the raw files, and which then applies any
#! necessary changes before writing the results out to a new folder.
#!
#! The other is to create a jar file which is loaded into the converter and
#! is run directly from within that, passing to it the DOM for each USX file
#! in turn, and leaving it to make changes in situ.
#!
#! To use this latter approach, place the jar file somewhere convenient, and
#! then use stepCallablePreprocessorJar to point to it (example path below).
#! The RHS is pretty much the same as for $include directives.
#!
#! If you _do_ define stepCallablePreprocessorJar, it takes precedence.  Even
#! if a Preprocessor folder exists and contains the kind of .jar, .exe, etc
#! mentioned above, the processing will ignore it.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#!stepCallablePreprocessorJar=$root/../_Preprocessor_/callablePreprocessor.jar



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! You need supply stepFileSelectorForOwnerOrganisation and / or
#! stepFileSelectorForExternalDataFormat only if you are working with texts for
#! which there is standard information available (which, at the time of writing,
#! means a) anything from the DBL library, and b) anything supplied to us by
#! Biblica. Both should use sentence case.
#!
#! stepFileSelectorForOwnerOrganisation lets the system pick up standard
#! information for the owner organisation where available (and at present,
#! it's only available for Biblica).  Otherwise you'd have to define anything
#! necessary yourself.  It majors on things like copyright conditions,
#! licensing terms, etc.
#!
#! stepFileSelectorForExternalDataFormat lets you pick up standard definitions
#! relating to a given data repository.  Usually the main or only purpose of
#! this is to make use of functionality built into the system which extracts
#! configuration information automatically from configuration files supplied by
#! that organisation.  For example, this makes it possible to pick up
#! information directly from the metadata.xml files supplied by Biblica, rather
#! than having to transcribe it manually.
#!
#! Make sure you use '#=', and not just '=', for these two definitions.
#!
#! If you use these definitions, they must come before the $include for
#! $common/commonForTargetSword.conf
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepFileSelectorForOwnerOrganisation#=     #! eg Biblica, which is the only special case we support at present.  Leave empty if not wanted.
stepFileSelectorForExternalDataFormat#=    #! eg Dbl.  Leave empty if not wanted.

$include $common/config.conf               #! Don't change either of these two rows, and don't add anything between them.
$include $common/commonRoot.conf           #! Implementation note: These may look as though you'll end up with recursive includes etc, but there's special processing to ensure you don't.



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! This permits simple tag changes early on in the processing.  Tags can be
#! renamed and / or their style attribute can be changed.
#!
#! The value should be a |-separated list of entries, each of the form eg
#!
#!   para:li4 -> para:li1
#!
#! Either or both may omit the ':xxx'.  The processing looks for tags with
#! the name matching the at the start of the left hand parameter (and with
#! style attributes matching the bit after the ':' if present).  The tag name
#! is changed to be the bit at the start of the right hand parameter, and the
#! style attribute is changed to be the bit after the ':'.  If there is nothing
#! after the ':' on the right hand side, any existing style attribute is
#! deleted.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepSimplePreprocessTagModifications=



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Final validation normally checks verse ordering and reports as an error places
#! where things are out of order.  However, some texts (at the time of writing,
#! notably deu_HFA) have things which are out of order in the first place.  The
#! setting below tells the processing whether to report errors or warnings
#! when things are out of order (assuming that validation is being applied --
#! this is controlled not by a configuration parameter, but by a compile-time
#! flag).
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepValidationReportOutOfOrderAsError=Yes



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Sometimes we may want to make fairly significant changes to a text
#! (particularly in support of reversification).  My assumption is that we may
#! not always want to do this, because it may violate copyright conditions.
#!
#! Admittedly, this may be a fairly blunt instrument -- for example, some
#! publishers may be happy for us to add footnotes but not to alter the text,
#! while others may not accept any changes at all, and I do not go down to that
#! level of granularity.
#!
#! This setting lets you indicate overtly whether you are are barred from making
#! 'significant' changes.  Yes always means Yes.  No doesn't necessarily mean
#! no, though -- if the 'About' information for a text contains the copyright
#! symbol, or the trademark symbol, or contains the word 'copyright', any value
#! specified for this setting is ignored, and the value is assumed to be Yes.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepLicenceLimitsScopeForChanges=Yes



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Type of reversification required.  You _can_ set this from the command line
#! (and at the time of writing, that's what I've always done), but if you rely
#! on that, you won't be able to use the automated processing to run over all
#! texts and rebuild them (because the automated processing does not let you
#! stipulate command-line parameters for each text for the converter).
#!
#! Any command-line setting takes priority.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepReversificationType=None #! Probably no longer needed if Sami's code works.
stepReversificationNotes=None



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Set to either Yes or No.  Typically this will be overridden in any case
#! where we are taking texts from an owning organisation such as Biblica which
#! has its own configuration file.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepEncryptionRequired=@Mandatory



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Details of any respects in which STEP has added 'significant' added value to
#! the text.  All yes/no values.  Note that if in future there are more aspects
#! in which value can be added, they will need to be listed here.
#!
#! In addition to the ones listed here, value may also be added via
#! reversification, but the setting for that is determined automatically.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepAddedValueStrongs=No
stepAddedValueMorphology=No



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Organisation details.  The ones which mention websites may be a link or
#! just a description -- eg
#!
#!    stepTextRepositoryOrganisationWebsiteLinkOrDescription=<a href='https://thedigitalbiblelibrary.org/'>The Digital BibleLibrary</a>
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepTextRepositoryOrganisationAbbreviatedName=@(stepTextRepositoryOrganisationFullName)
stepTextRepositoryOrganisationFullName=@MandatoryMayBeEmpty
stepTextRepositoryOrganisationWebsiteLinkOrDescription=@MandatoryMayBeEmpty

stepTextOwnerOrganisationAbbreviatedName=@(stepTextOwnerOrganisationFullName)
stepTextOwnerOrganisationFullName=@MandatoryOrEmpty
stepTextOwnerOrganisationWebsiteLinkOrDescription=@MandatoryMayBeEmpty



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Something which uniquely identified a particular version of a given text.
#! Usually you can probably rely upon the text supplier giving you something
#! suitable (or perhaps the repository from which the text was obtained -- DBL,
#! for instance, requires the metadata for all texts to contain a version
#! number).
#!
#! If you aren't given anything suitable, you'll just have to make something up.
#!
#! The format doesn't matter (ie you can go with whatever you're given),
#! except that it should not contain spaces.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepTextVersionSuppliedBySourceRepositoryOrOwnerOrganisation=@Mandatory



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Language details
#!
#! Define these only if you're sure you need to do so.  In particular, all of
#! them can be picked up automatically from DBL metadata files, so if you're
#! using DBL texts, you need define things here only if you specifically want to
#! override what DBL gives.
#!
#! stepTextDirection should be LtoR or RtoL (those specific options -- _not_ LTR
#!   or RTL).
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#! stepTextDirection=LtoR
#! stepSuppliedScriptCode=
#! stepSuppliedCountryCode=



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Must be one of the versification schemes recognised by osis2mod.  If you are
#! applying reversification, this will be forced by the processing to be NRSV(A).
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepVersificationScheme=NRSV



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Blurb for copyright page.
#!
#! Override the vernacular Bible name if you happen to know the vernacular form.
#!
#! stepAboutAsSupplied feeds into StepAbout, which is defined in commonRoot.conf.
#!
#! stepDistributionLicence is supposed to be one of:
#!
#!   Public Domain
#!   Copyrighted
#!   Copyrighted; Permission to distribute granted to CrossWire[1]
#!   Copyrighted; Permission granted to distribute non-commercially in SWORD format
#!   Copyrighted; Free non-commercial distribution
#!   Copyrighted; Freely distributable
#!   GFDL
#!   GPL
#!   Creative Commons: BY-NC-ND 4.0
#!   Creative Commons: BY-NC-SA 4.0
#!   Creative Commons: BY-NC 4.0
#!   Creative Commons: BY-ND 4.0
#!   Creative Commons: BY-SA 4.0
#!   Creative Commons: BY 4.0
#!   Creative Commons: CC0
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepBibleNameEnglish=@Mandatory
stepBibleNameVernacular=@Mandatory
stepAbbreviationEnglish=@Mandatory
stepAbbreviationLocal=@Mandatory
stepShortPromo={empty} #! Short promotional material (may include an HTML <a href> link).  Assumed blank if not supplied.
stepAboutAsSupplied=@Mandatory #! A brief description.  Along with some standard stuff of our own, turns into Sword's 'About' parameter (see stepAbout below).
stepDistributionLicence=@Mandatory #! This needs to be drawn from a prescribed list -- see head of file comments for more information.



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! A little difficult to explain ...
#!
#! First off, this is not actually relevant to the processing at all, beyond
#! the fact that it will store it somewhere or other.  I am including it purely
#! to give us a unique id which might be of use to any admin tool we develop.
#!
#! So, what we are trying to achieve here is a unique id.  Often a publisher
#! (or a repository such as DBL) give the texts their own unique id, and you
#! store this against stepTextIdSuppliedBySourceRepositoryOrOwnerOrganisation.
#!
#! However, although this id may be unique across the texts managed by that
#! organisation, there is no guarantee it will be globally unique -- another
#! organisation may use the same id.
#!
#! To attempt to ensure global uniqueness, you can specify any string you like
#! for stepDisambiguatorForId (you might perhaps choose 'DBL' for a DBL text
#! for instance).  The two values are then used jointly as the id.
#!
#! If you have not been provided with an id, you'll have to make something up --
#! perhaps the URL of web page which deals with the text, or failing that just
#! some arbitrary value drawn from a list which you maintain.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepDisambiguatorForId=@MandatoryMayBeEmpty
stepTextIdSuppliedBySourceRepositoryOrOwnerOrganisation=@Mandatory



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Certain modules require STEP software to be at a particular level in order
#! to work.  Use 1 for the original version (the one before we identified the
#! need for particular versions to be an issue), then 2, 3, etc.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#!stepSoftwareVersionRequired=@Mandatory



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! It may be useful to include lines which are simply copied to the end of the
#! Sword config file.  You can therefore append here a number of lines of the
#! form
#!
#!   copyAsIs=...
#!
#! for example
#!
#!   copyAsIs=Obsoletes=abcXYZ
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#! copyAsIs=...


