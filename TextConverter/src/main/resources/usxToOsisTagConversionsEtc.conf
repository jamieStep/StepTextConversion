#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Default vernacular formatting
#! =============================
#!
#! This file is concerned (almost exclusively) with how USX tags are converted
#! into OSIS equivalents.
#!
#! The defaults here are those which commonly apply to English Bibles.
#!
#! One comment about special features of the configuration data :-
#!
#! * You can use {space} to represent a single space.  I recommend you make
#!   use of this, rather than using actual spaces, to make your intent clearer.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Callout markers.
#!
#! The character(s) used where auto-generated callouts are required.  In general
#! STEP imposes its own fixed views as to how callouts should be represented,
#! even with constructs where the incoming text may attempt to define what they
#! should be.  Options are :-
#!
#! * A single character, which character is used every time a callout of the
#!   given flavour is required.
#!
#! * The word 'numeric' in which case the callouts run 1, 2, 3, etc.
#!
#! * A collection of characters like abcdefghijklmnopqrstuvwxyz, in which case
#!   the callouts run a, b, ... aa, ab, etc.  Callouts are reset at the start of
#!   each chapter.
#!
#! The values below really reflect the fact that STEP itself always renders
#! callout markers as down arrows, regardless of what you ask them to be, so
#! I'm really just giving in to the inevitable.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#stepCrossReferenceCallout=abcdefghijklmnopqrstuvwxyz #! Cross-reference callouts run a, b, ..., z, aa, ...
stepCrossReferenceCallout=▼     #! Cross-reference callouts run a, b, ..., z, aa, ...
stepExplanationCallout=▼        #! The callout marker used for the given purpose.
stepMapCallout=▼                #! The callout marker used for the given purpose.
stepStudyNotesCallout=▼         #! The callout marker used for the given purpose.
stepTranslationNotesCallout=▼   #! The callout marker used for the given purpose.
stepVariantTextCallout=▼        #! The callout marker used for the given purpose.




#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! USX-to-OSIS tag mappings.
#!
#! In many / most cases, a given USX tag gives rise in a fairly straightforward
#! manner to one or more OSIS tags, which are opened when the opening USX tag is
#! encountered and closed when the closing tag is encountered.  I am _hoping_
#! that these mappings are pretty much fixed across all of the Bibles we may be
#! asked to process.  However, I think we probably have to accept that, given
#! the fact translators often have to resort to some fairly arbitrary-looking
#! USX markup in the hope that it will eventually lead to the right thing when
#! the text is rendered ... given this, we probably have to accept that it may
#! be useful to be able to configure the mappings for the different texts we
#! have to process.
#!
#! This is handled by the stepUsxToOsisTagTranslation tag of which the following is an
#! example :-
#!
#!   stepUsxToOsisTagTranslation=(usx=Ͼchar:bdϿ, osis=Ͼ<hi type='bold'>Ͽ)
#!
#! where the first parameter inside the parentheses is the USX tag (followed by
#! a colon and the style attribute for those tags which have them, and the
#! second parameter gives the corresponding OSIS tag (or a number of consecutive
#! OSIS tags where appropriate).
#!
#! Apologies for the weird 'quote' marks (Ͼ...Ͽ) -- I needed something which was
#! vanishingly unlikely ever to turn up in genuine replacement text.
#!
#! If you stipulate things as above, then the OSIS parameter gives the OSIS
#! tag(s) to be generated in respect of the given USX start tag, and the system
#! automatically outputs the corresponding OSIS end tags when the USX end tag is
#! encountered.
#!
#! If you need to have different details for start and end, you can, instead of
#! giving osis=, give osisStart= and osisEnd=.  (If you give only one of these,
#! the other defaults to an empty string.)
#!
#! A few more notes ...
#!
#! * You can include @attributeName within the value if you wish to include an
#!   attribute from the USX tag at a particular location.  So, for example,
#!   if a USX tag contained an attribute 'thing', then giving the OSIS as
#!   <someTag>@thing</someTag> will generate OSIS which embeds the value of the
#!   USX 'thing' attribute withing 'someTag'.  You can also have @attributeName?
#!   where the question mark indicates that the attribute is not always
#!   available, and will be treated as blank where it is not available.
#!
#! * You can also include the following dummy attribute names.  (Word of
#!   warning: the list below dates back quite a long way, and I'm not 100% sure
#!   that all of these are still supported.  Probably best to prepare for the
#!   possibility that things won't work unless the item is actually currently in
#!   use in the file.)
#!
#!   - @allAttributes: Generates a string made up of all the attributes from the
#!     input node in 'proper' format -- attrA='valA' attrB='valB' ...
#!
#!   - @currentRefAsRefs: The current reference in OSIS format.  Within a book
#!      tag, this will comprise only the OSIS book abbreviation.  Within a
#!      chapter tag, it will give book and chapter.  Within a verse it will give
#!      book, chapter and verse.  Sometimes USX	gives a chapter _range_ rather
#!      than an individual verse, in which case this will give the range as
#!      individual references, space-separated.
#!
#!   - @currentRefAsRange: The current reference in OSIS format.  Within a book
#!     tag, this will comprise only the OSIS book abbreviation.  Within a
#!     chapter tag, it will give book and chapter.  Within a verse it will give
#!     book, chapter and verse.  Sometimes USX gives a chapter range rather than
#!     an individual verse, in which case this will give the range formatted as
#!     an OSIS range.
#!
#!   - @currentRefLow: Regardless of whether the current reference is a range or
#!     an individual reference, gives back the first or only reference, in OSIS
#!     format.
#!
#!   - @chapter0Ref: Inserts a reference to the 'dummy' chapter 0 of the present
#!     book.
#!
#!   - @caller: Inserts a marker to point to a footnote, cross-reference, etc.
#!
#!   - @refCounter: A counter which is used to guarantee reference ids are
#!     unique.
#!
#!
#! * In addition to the osis / osisStart / osisEnd definitions, you can also
#!   include an 'action' attribute as follows :-
#!
#!   - ϾsuppressContentϿ: Causes the starting and ending tag to be output, but
#!     the content to be suppressed.
#!
#!
#! You can include 'AsOsisRef_' before an attribute name -- eg @AsOsisRef_loc.
#! In such cases, it is assumed that the USX tag being translated contains an
#! attribute ('loc' in this case) which holds a reference, and this reference is
#! converted to OSIS format.
#!
#! You can also include 'AsVernacularRef_xxx_", where xxx may be something like
#! eg BCV to give the reference as book + chapter + verse
#!
#!
#! Any tags listed below as tbd are yet to be implemented.  If they are
#! encountered in a given text, processing will be aborted.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! char tags.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=Ͼchar:addϿ osis=Ͼ<transChange type='added'>Ͽ) #! For a translational addition to the text.

stepUsxToOsisTagTranslation=(usx=Ͼchar:bdϿ osis=Ͼ<hi type='bold'>Ͽ) #! Bold.
      
stepUsxToOsisTagTranslation=(usx=Ͼchar:bditϿ osis=Ͼ<hi type='bold'><hi type='italic'>Ͽ) #! Bold italic.
      
stepUsxToOsisTagTranslation=(usx=Ͼchar:bkϿ osis=Ͼ<hi type='italic'>Ͽ) #! For the quoted name of a book.  $$$ Added for Bulgarian Bibles.

stepUsxToOsisTagTranslation=(usx=Ͼchar:emϿ osis=Ͼ<hi type='emphasis'>Ͽ) #! A character style, use emphasized text style.

#! Note that the following is pretty difficult to find in the doc, and does not appear at all in the schema.
stepUsxToOsisTagTranslation=(usx=Ͼchar:fkϿ osis=Ͼ<hi type='bold'>Ͽ) #! Footnote keyword -- the term about which the footnote is being provided.

stepUsxToOsisTagTranslation=(usx=Ͼchar:flϿ osis=Ͼ<hi type='bold'>Ͽ) #! A footnote label text item, for marking or "labelling" the type or alternate translation being provided in the note.

#! This exists in USFM, and is also in the USX schema, but is missing from the USX documentation.
#! If I understand correctly, it is of use mainly with printed texts, where it makes it possible
#! to have two different references to the same footnote.  We can't benefit from this, so I'm
#! not proposing to have it do anything.
stepUsxToOsisTagTranslation=(usx=Ͼchar:fmϿ osis=ϾϿ) #! Reference to caller of previous footnote. 

stepUsxToOsisTagTranslation=(usx=Ͼchar:fpϿ osis=Ͼ<lb/>Ͽ) #! A footnote additional paragraph marker.

stepUsxToOsisTagTranslation=(usx=Ͼchar:fqϿ osis=Ͼ<hi type='italic'>Ͽ) #! A footnote scripture quote or alternate rendering.

stepUsxToOsisTagTranslation=(usx=Ͼchar:fqaϿ osis=Ͼ<hi type='italic'>Ͽ) #! A footnote alternate rendering for a portion of scripture text.

stepUsxToOsisTagTranslation=(usx=Ͼchar:frϿ action=ϾsuppressContentϿ) #! The origin reference for the footnote.
  
stepUsxToOsisTagTranslation=(usx=Ͼchar:ftϿ osis=ϾϿ) #! Footnote text.  Presently I'm not proposing to do anything here to format this.
      
stepUsxToOsisTagTranslation=(usx=Ͼchar:fvϿ osis=Ͼ<seg type='verseNumber'>Ͽ) #! A verse number within the footnote text.

#! Introduction references range for outline entry; for marking references separately.
#! Using italic here mirrors the USFM manual.  Ideally I guess these would be translated into actual references.
stepUsxToOsisTagTranslation=(usx=Ͼchar:iorϿ osis=Ͼ<hi type='italic'>Ͽ)

stepUsxToOsisTagTranslation=(usx=Ͼchar:itϿ osis=Ͼ<hi type='italic'>Ͽ) #! Italic.
      
stepUsxToOsisTagTranslation=(usx=Ͼchar:kϿ osis=Ͼ<hi type='bold'>Ͽ) #! For a keyword.

stepUsxToOsisTagTranslation=(usx=Ͼchar:ndϿ osis=Ͼ<divineName>Ͽ) #! Divine name.
      
stepUsxToOsisTagTranslation=(usx=Ͼchar:noϿ osis=Ͼ<hi type='normal'>Ͽ) #! Normal style.
      
stepUsxToOsisTagTranslation=(usx=Ͼchar:ordϿ osis=Ͼ<hi type='super'>Ͽ) #! For the text portion of an ordinal number.

stepUsxToOsisTagTranslation=(usx=Ͼchar:pnϿ osis=Ͼ<name>Ͽ) #! For a proper name.

#! Poetry text, Acrostic markup of the first character of a line of acrostic poetry.
stepUsxToOsisTagTranslation=(usx=Ͼchar:qacϿ osis=Ͼ<hi type='italic'>Ͽ)

#! See para:qs for discussion.
stepUsxToOsisTagTranslation=(usx=Ͼchar:qsϿ osis=Ͼ<hi type='italic'>Ͽ) #! Poetry text, Selah.

stepUsxToOsisTagTranslation=(usx=Ͼchar:qtϿ osis=Ͼ<hi type='italic'>Ͽ) #! For Old Testament quoted text appearing in the New Testament.

stepUsxToOsisTagTranslation=(usx=Ͼchar:rqϿ osisStart=Ͼ<lb/><hi type='italic'>Ͽ osisEnd=Ͼ</hi>Ͽ) #! A cross-reference indicating the source text for the preceding quotation.

stepUsxToOsisTagTranslation=(usx=Ͼchar:scϿ osis=Ͼ<hi type='small-caps'>Ͽ) #! A character style, for small capitalization text.

stepUsxToOsisTagTranslation=(usx=Ͼchar:slsϿ osis=Ͼ<hi type='italic'>Ͽ) #! To represent where the original text is in a secondary language or from an alternate text source.  $$$ Added for Bulgarian Bibles.

stepUsxToOsisTagTranslation=(usx=Ͼchar:supϿ osis=Ͼ<hi type='super'>) #! A character style, for superscript text. Typically for use in critical edition footnotes.

stepUsxToOsisTagTranslation=(usx=Ͼchar:tlϿ osis=Ͼ<hi type='italic'>Ͽ) #! For transliterated words.



#! Second (alternate) verse number (for coding dual numeration in Psalms;
#! see also NRSV Exo 22.1-4).  At least one Bible requests that this be shown
#! as a superscript and in a different colour, but I don't think OSIS overtly supports either.
stepUsxToOsisTagTranslation=(usx=Ͼchar:vaϿ osisStart=Ͼ[Ͽ osisEnd=Ͼ]Ͽ)

stepUsxToOsisTagTranslation=(usx=Ͼchar:vpϿ osisStart=Ͼ[Ͽ osisEnd=Ͼ]Ͽ)  #! Published verse marker - this is a verse marking that would be used in the published text.

stepUsxToOsisTagTranslation=(usx=Ͼchar:wϿ osis=Ͼ<w gloss='@strong'>Ͽ) #! Strong's.
stepUsxToOsisTagTranslation=(usx=Ͼchar:waϿ osis=TBD) #! An Aramaic wordlist text item.
stepUsxToOsisTagTranslation=(usx=Ͼchar:wgϿ osis=TBD) #! A Greek Wordlist text item.
stepUsxToOsisTagTranslation=(usx=Ͼchar:whϿ osis=TBD) #! A Hebrew wordlist text item.
      
stepUsxToOsisTagTranslation=(usx=Ͼchar:wjϿ osis=Ͼ<q who='Jesus'>Ͽ) #! For marking the words of Jesus.

stepUsxToOsisTagTranslation=(usx=Ͼchar:xdcϿ osis=ϾϿ) #! Cross-reference target reference(s), Deuterocanon only.

#! A keyword from the scripture translation text which the target reference(s) also refer to.
stepUsxToOsisTagTranslation=(usx=Ͼchar:xkϿ action=ϾsuppressContentϿ)

#! The 'owning' verse of a cross-reference.  Given that the xref is always positioned within the owner, I think this is irrelevant.
stepUsxToOsisTagTranslation=(usx=Ͼchar:xoϿ action=ϾsuppressContentϿ)

#! Quotation from scripture text.  In theory, USX doesn't have this, but Paratext thinks it does.
stepUsxToOsisTagTranslation=(usx=Ͼchar:xqϿ osis=Ͼ<hi type='italic'>Ͽ)

#! Cross-ref target.  Generally this does no more than include a number of
#! <ref> tags, and I don't think we want any special formatting.

stepUsxToOsisTagTranslation=(usx=Ͼchar:xtϿ osis=ϾϿ)




#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! note tags.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=Ͼnote:fϿ osis=Ͼ<note type='explanation' osisRef='@currentRefAsRange' osisID='@currentRefLow!fref_@refCounter' n='@caller'>Ͽ) #! Footnote.

stepUsxToOsisTagTranslation=(usx=Ͼnote:feϿ osis=Ͼ<note type='explanation' osisRef='@currentRefAsRange' osisID='@currentRefLow!fref_@refCounter' n='@caller'>Ͽ) #! Endnote.  In theory, not supported by USX, but Paratext thinks it is.

stepUsxToOsisTagTranslation=(usx=Ͼnote:xϿ osis=Ͼ<note type='crossReference' osisRef='@currentRefAsRange' osisID='@currentRefLow!xref_@refCounter' n='@caller'>Ͽ) #! Cross-reference.





#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! para tags.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#! In theory, para:b maps to OSIS lb.  In practice if you do that, you tend to
#! get excessive whitespace.  For some bizarre reason an empty <l level='1'>
#! works better (although regrettably having recourse to this guarantees that we 
#! will not be OSIS-compliant, because the L tag is supposed to be enclosed in
#! LG).  Note that if you do revert to lb, there is a problem where consecutive
#! lb's are being used to create a blank line, because something somewhere
#! suppresses the lb if its only effect is to create a blank line.  To get round
#! this, you need to include a non-breaking space as in the example below :-
#!
#! stepUsxToOsisTagTranslation=(usx=Ͼpara:bϿ osisStart=Ͼ&amp;nbsp;Ͽ osisEnd=Ͼ<lb/>Ͽ) #! Poetry text stanza break (e.g. stanza break).

stepUsxToOsisTagTranslation=(usx=Ͼpara:bϿ osis=Ͼ<l level='1'>Ͽ) #! Poetry text stanza break (e.g. stanza break).

stepUsxToOsisTagTranslation=(usx=Ͼpara:cdϿ osis=Ͼ<hi type='italic'>Ͽ) #! Chapter Description (Publishing option D, e.g. in Russian Bibles).

stepUsxToOsisTagTranslation=(usx=Ͼpara:clϿ action=ϾsuppressContentϿ) #! Chapter label used for translations that add a word such as "Chapter".

stepUsxToOsisTagTranslation=(usx=Ͼpara:clsϿ osis=Ͼ<closer>Ͽ) #! Closure of an Epistle.

stepUsxToOsisTagTranslation=(usx=Ͼpara:cpϿ action=ϾsuppressContentϿ) #! Published chapter number.

stepUsxToOsisTagTranslation=(usx=Ͼpara:dϿ osis=Ͼ<title type='psalm' canonical='true'>Ͽ) #! Descriptive title (canonical only?).
      
stepUsxToOsisTagTranslation=(usx=Ͼpara:hϿ action=ϾsuppressContentϿ) #! Running header text for a book.

stepUsxToOsisTagTranslation=(usx=Ͼpara:ibϿ osis=Ͼ<lb/>Ͽ) #! Introduction blank line.

stepUsxToOsisTagTranslation=(usx=Ͼpara:ideϿ action=ϾsuppressContentϿ) #! File encoding information.

stepUsxToOsisTagTranslation=(usx=Ͼpara:ieϿ osis=Ͼ<p><hi type='bold'>Ͽ) #! End of introductory material.  (I think the para will normally not contain any text.)  $$$ Added for Bulgarian Bibles.

stepUsxToOsisTagTranslation=(usx=Ͼpara:iexϿ osis=ϾϿ) #! Introduction explanatory or bridge text (e.g. explanation of missing book in Short Old Testament).

#! These aren't as per App F of the OSIS ref man (indeed aren't even valid OSIS,
#! because they're supposed to come within a group), but seem to do what we want.
stepUsxToOsisTagTranslation=(usx=Ͼpara:iliϿ  osis=Ͼ<l level='1'>Ͽ)  #! Introduction list entry level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:ili1Ͽ osis=Ͼ<l level='1'>Ͽ)  #! Introduction list entry level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:li1Ͽ osis=Ͼ<l level='1'>Ͽ)  #! List entry level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:li2Ͽ osis=Ͼ<l level='2'>Ͽ)  #! List entry level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:li3Ͽ osis=Ͼ<l level='3'>Ͽ)  #! List entry level 3.
stepUsxToOsisTagTranslation=(usx=Ͼpara:li4Ͽ osis=Ͼ<l level='4'>Ͽ)  #! List entry level 4.

#!stepUsxToOsisTagTranslation=(usx=Ͼpara:li1Ͽ osis=Ͼ<item>Ͽ)  #! List entry level 1.
#!stepUsxToOsisTagTranslation=(usx=Ͼpara:li2Ͽ osis=Ͼ<item>Ͽ)  #! List entry level 2.
#!stepUsxToOsisTagTranslation=(usx=Ͼpara:li3Ͽ osis=Ͼ<item>Ͽ)  #! List entry level 3.
#!stepUsxToOsisTagTranslation=(usx=Ͼpara:li4Ͽ osis=Ͼ<item>Ͽ)  #! List entry level 4.


stepUsxToOsisTagTranslation=(usx=Ͼpara:imqϿ osis=Ͼ<p><hi type='italic'>Ͽ)  #! Introduction flush left (margin) quote from scripture text paragraph.
stepUsxToOsisTagTranslation=(usx=Ͼpara:iprϿ osis=Ͼ<p type='x-refrain'>Ͽ)  #! Introduction right-aligned paragraph.
    
stepUsxToOsisTagTranslation=(usx=Ͼpara:ioϿ  osis=Ͼ<item>Ͽ)  #! Introduction outline entry.
stepUsxToOsisTagTranslation=(usx=Ͼpara:io1Ͽ osis=Ͼ<item>Ͽ)  #! Introduction outline entry.
stepUsxToOsisTagTranslation=(usx=Ͼpara:io2Ͽ osis=Ͼ<item>Ͽ)  #! Introduction outline entry.
stepUsxToOsisTagTranslation=(usx=Ͼpara:io3Ͽ osis=Ͼ<item>Ͽ)  #! Introduction outline entry.
      
stepUsxToOsisTagTranslation=(usx=Ͼpara:iotϿ osis=Ͼ<title>Ͽ) #! Introduction outline title.
      
stepUsxToOsisTagTranslation=(usx=Ͼpara:ipϿ osis=Ͼ<p>Ͽ) #! Introduction para.
      
stepUsxToOsisTagTranslation=(usx=Ͼpara:isϿ osis=Ͼ<div type='section'><title>Ͽ) #! Introduction section heading level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:is1Ͽ osis=Ͼ<div type='section'><title>Ͽ) #! Introduction section heading level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:is2Ͽ osis=Ͼ<div type='subsection'><title>Ͽ) #! Introduction section heading level 2.

      
#! These aren't as per App F of the OSIS ref man (indeed aren't even valid OSIS,
#! because they're supposed to come within a group), but seem to do what we want.
stepUsxToOsisTagTranslation=(usx=Ͼpara:liϿ  osis=Ͼ<l level='1'>Ͽ)  #! List entry level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:li1Ͽ osis=Ͼ<l level='1'>Ͽ)  #! List entry level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:li2Ͽ osis=Ͼ<l level='2'>Ͽ)  #! List entry level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:li3Ͽ osis=Ͼ<l level='3'>Ͽ)  #! List entry level 3.
stepUsxToOsisTagTranslation=(usx=Ͼpara:li4Ͽ osis=Ͼ<l level='4'>Ͽ)  #! List entry level 3.
    
        
stepUsxToOsisTagTranslation=(usx=Ͼpara:mϿ osis=Ͼ<p>Ͽ) #! Margin para (eg move back to left margin after poetry).

   
#! Not too sure what to do with this.  Pro tem I'll just turn it into a plain vanilla para.
stepUsxToOsisTagTranslation=(usx=Ͼpara:miϿ osis=Ͼ<p>Ͽ) #! Indented flush left paragraph.


#! Major section references. Not at all sure this makes sense.
stepUsxToOsisTagTranslation=(usx=Ͼpara:mrϿ osis=Ͼ<div type='majorSection'><title type='scope'>Ͽ)


stepUsxToOsisTagTranslation=(usx=Ͼpara:msϿ  osis=Ͼ<div type='majorSection'><title>Ͽ ) #! Major section title level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:ms1Ͽ osis=Ͼ<div type='majorSection'><title>Ͽ) #! Major section title level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:ms2Ͽ osis=Ͼ<div type='majorSection'><div type='majorSection'><title>Ͽ) #! Major section title level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:ms3Ͽ osis=Ͼ<div type='majorSection'><div type='majorSection'><div type='majorSection'><title>Ͽ) #! Major section title level 3.


  
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! CAUTION !!!!!!!!!
#!
#! According to Appendix F of the OSIS reference manual, para:m1 and para:mt
#! should be converted to <title type='main' level='1'>.  However if you do
#! that, and if you have a single chapter book like Jude which contains cross-
#! references, none of the canonical text gets displayed.
#!
#! In the one text of which we have experience at the time of writing, we don't
#! actually want the para:mt coming out anyway.  Given that I suppose in other
#! texts we _might_ want it, possibly I should have put the override below into
#! the metadata specific to the text which _doesn't_ want them.  However, the
#! nature of the problem we have encountered is so egregious, and the difficulty
#! of tracking it down is so significant, that I've thought it safer to do it
#! here.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	
stepUsxToOsisTagTranslation=(usx=Ͼpara:imϿ  osis=Ͼ<p>Ͽ)  #! Introduction prose paragraph, with no first line indent (may occur after poetry).
stepUsxToOsisTagTranslation=(usx=Ͼpara:imtϿ osis=Ͼ<title type='main' level='1' subType='x-preverse'>Ͽ ) #! Introduction major title, level 1 (if single level).
stepUsxToOsisTagTranslation=(usx=Ͼpara:mtϿ  osis=Ͼ<title type='main' level='1' subType='x-preverse'>Ͽ ) #! Main title level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:mt1Ͽ osis=Ͼ<title type='main' level='1' subType='x-preverse'>Ͽ ) #! Main title level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:mt2Ͽ osis=Ͼ<title type='main' level='2' subType='x-preverse'>Ͽ ) #! Main title level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:mt3Ͽ osis=Ͼ<title type='main' level='3' subType='x-preverse'>Ͽ ) #! Main title level 3.
   

#! Introduction prose paragraph, with no first line indent (may occur after poetry).
#! stepUsxToOsisTagTranslation=(usx=Ͼpara:imϿ  action=ϾsuppressContentϿ)
stepUsxToOsisTagTranslation=(usx=Ͼpara:imtϿ action=ϾsuppressContentϿ) #! Introduction major title, level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:imt1Ͽ action=ϾsuppressContentϿ) #! Introduction major title, level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:imt2Ͽ action=ϾsuppressContentϿ) #! Introduction major title, level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:imteϿ action=ϾsuppressContentϿ) #! Introduction major title ending, level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:imte1Ͽ action=ϾsuppressContentϿ) #! Introduction major title ending, level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:imte2Ͽ action=ϾsuppressContentϿ) #! Introduction major title ending, level 2.

#! stepUsxToOsisTagTranslation=(usx=Ͼpara:mtϿ  action=ϾsuppressContentϿ) #! Main title level 1.
#! stepUsxToOsisTagTranslation=(usx=Ͼpara:mt1Ͽ action=ϾsuppressContentϿ) #! Main title level 1.
#! stepUsxToOsisTagTranslation=(usx=Ͼpara:mt2Ͽ action=ϾsuppressContentϿ) #! Main title level 2.
#! stepUsxToOsisTagTranslation=(usx=Ͼpara:mt3Ͽ action=ϾsuppressContentϿ) #! Main title level 3.
#! stepUsxToOsisTagTranslation=(usx=Ͼpara:mt4Ͽ action=ϾsuppressContentϿ) #! Main title level 4.
   

stepUsxToOsisTagTranslation=(usx=Ͼpara:nbϿ osis=ϾϿ) #! Paragraph text, with no break from previous paragraph text (at chapter boundary).

stepUsxToOsisTagTranslation=(usx=Ͼpara:pϿ osis=Ͼ<p>Ͽ) #! Normal para.

      
#! Centered para.  App F calls for the use of 'inscription', but that doesn't give the required centering.
stepUsxToOsisTagTranslation=(usx=Ͼpara:pcϿ osis=Ͼ<l type='doxology'><hi type='small-caps'>Ͽ)


stepUsxToOsisTagTranslation=(usx=Ͼpara:pmϿ  osisStart=Ͼ<p>Ͽ osisEnd=Ͼ</p>Ͽ) #! Embedded text paragraph.
stepUsxToOsisTagTranslation=(usx=Ͼpara:pmcϿ osisStart=Ͼ<p>Ͽ osisEnd=Ͼ</p>Ͽ) #! Embedded text closing.
stepUsxToOsisTagTranslation=(usx=Ͼpara:pmoϿ osisStart=Ͼ<p>Ͽ osisEnd=Ͼ</p>Ͽ) #! Embedded text opening.
      
      
#! The SIL recommendation is that you use <list><item><p> for these.  However,
#! that introduces bullet point markers and excessive vertical whitespace.  I am
#! therefore using poetry lines instead.  Except that to satisfy OSIS
#! validation, we'd need to enclose these items with <lg>, and that introduces
#! too much vertical whitespace, I'm not generating the <lg> after all.  This
#! means we are not generating valid OSIS, but DIB points out that many of the
#! modules we are handling are licensed only to us, and therefore can't be used
#! by anyone else anyway.

stepUsxToOsisTagTranslation=(usx=Ͼpara:piϿ  osis=Ͼ<l level='1'>Ͽ) #! Indented para.
stepUsxToOsisTagTranslation=(usx=Ͼpara:pi1Ͽ osis=Ͼ<l level='1'>Ͽ) #! Indented para.
stepUsxToOsisTagTranslation=(usx=Ͼpara:pi2Ͽ osis=Ͼ<l level='2'>Ͽ) #! Indented para.
stepUsxToOsisTagTranslation=(usx=Ͼpara:pi3Ͽ osis=Ͼ<l level='3'>Ͽ) #! Indented para.

stepUsxToOsisTagTranslation=(usx=Ͼpara:pmrϿ osis=Ͼ<l type='refrain'>Ͽ) #! Embedded text refrain.
 
stepUsxToOsisTagTranslation=(usx=Ͼpara:prϿ osis=Ͼ<l type='refrain'>Ͽ) #! Right-aligned para.  This is an underhand attempt to achieve something which OSIS doesn't seem to support overtly.

stepUsxToOsisTagTranslation=(usx=Ͼpara:iqϿ  osis=Ͼ<l level='1'>Ͽ)  #! Poetry line level 1 (introduction).
stepUsxToOsisTagTranslation=(usx=Ͼpara:iq1Ͽ osis=Ͼ<l level='1'>Ͽ)  #! Poetry line level 1 (introduction).
stepUsxToOsisTagTranslation=(usx=Ͼpara:iq2Ͽ osis=Ͼ<l level='2'>Ͽ)  #! Poetry line level 2 (introduction).
stepUsxToOsisTagTranslation=(usx=Ͼpara:iq3Ͽ osis=Ͼ<l level='3'>Ͽ)  #! Poetry line level 3 (introduction).
stepUsxToOsisTagTranslation=(usx=Ͼpara:iq4Ͽ osis=Ͼ<l level='4'>Ͽ)  #! Poetry line level 4 (introduction).

stepUsxToOsisTagTranslation=(usx=Ͼpara:qϿ  osis=Ͼ<l level='1'>Ͽ)  #! Poetry line level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:q1Ͽ osis=Ͼ<l level='1'>Ͽ)  #! Poetry line level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:q2Ͽ osis=Ͼ<l level='2'>Ͽ)  #! Poetry line level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:q3Ͽ osis=Ͼ<l level='3'>Ͽ)  #! Poetry line level 3.
stepUsxToOsisTagTranslation=(usx=Ͼpara:q4Ͽ osis=Ͼ<l level='4'>Ͽ)  #! Poetry line level 4.

stepUsxToOsisTagTranslation=(usx=Ͼpara:qaϿ osis=Ͼ<l type='acrostic'>Ͽ) #! Poetry text, Acrostic marker/heading.
        
stepUsxToOsisTagTranslation=(usx=Ͼpara:qcϿ osis=Ͼ<l type='doxology'>Ͽ) #! Centred poetry.
      
stepUsxToOsisTagTranslation=(usx=Ͼpara:qmϿ osis=Ͼ<l level='1'>Ͽ) #! Poetry text, embedded, level 1 indent (if single level).  Not sure what 'embedded' is supposed to do here.
stepUsxToOsisTagTranslation=(usx=Ͼpara:qm1Ͽ osis=Ͼ<l level='1'>Ͽ) #! Poetry text, embedded, level 1 indent (if multiple levels).  Not sure what 'embedded' is supposed to do here.
stepUsxToOsisTagTranslation=(usx=Ͼpara:qm2Ͽ osis=Ͼ<l level='2'>Ͽ) #! Poetry text, embedded, level 2 indent.  Not sure what 'embedded' is supposed to do here.
stepUsxToOsisTagTranslation=(usx=Ͼpara:qm3Ͽ osis=Ͼ<l level='3'>Ͽ) #! Poetry text, embedded, level 3 indent.  Not sure what 'embedded' is supposed to do here.

stepUsxToOsisTagTranslation=(usx=Ͼpara:qrϿ osis=Ͼ<l type='attribution'>Ͽ) #! Right-aligned poetry.


#! Ripe source of confusion ...
#! Things like qs etc are actually char tags in USX.  However OSIS sees them as
#! paras, and it is therefore convenient in the course of processing to convert
#! them to paras.  Except that in this particular case, doing that doesn't
#! work: I think the best we can do is italicise the content.
stepUsxToOsisTagTranslation=(usx=Ͼpara:qsϿ osis=Ͼ<hi type='italic'>Ͽ) #! Poetry text, Selah.


stepUsxToOsisTagTranslation=(usx=Ͼpara:rϿ osis=Ͼ<title type='parallel'>Ͽ) #! Parallel reference(s).

stepUsxToOsisTagTranslation=(usx=Ͼpara:remϿ action=ϾsuppressContentϿ) #! Remark.
      
stepUsxToOsisTagTranslation=(usx=Ͼpara:sϿ  osis=Ͼ<div type='section'><title>Ͽ   ) #! Section heading level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:s1Ͽ osis=Ͼ<div type='section'><title>Ͽ   ) #! Section heading level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:s2Ͽ osis=Ͼ<div type='subSection'><title>Ͽ) #! Section heading level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:s3Ͽ osis=Ͼ<div type='subSection'><title>Ͽ) #! Section heading level 3.  I don't think OSIS has anything below subsection, so that'll have to do.
stepUsxToOsisTagTranslation=(usx=Ͼpara:s4Ͽ osis=Ͼ<div type='subSection'><title>Ͽ) #! Section heading level 4.  I don't think OSIS has anything below subsection, so that'll have to do.


#! Speaker.  Don't use the OSIS speech tags - they aren't rendered very nicely.
#!stepUsxToOsisTagTranslation=(usx=Ͼpara:spϿ osisStart=Ͼ<lb/>&amp;nbsp;<p><hi type='bold'><hi type='italic'>Ͽ osisEnd=Ͼ</hi></hi></p>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼpara:spϿ osisStart=Ͼ<p><hi type='bold'><hi type='italic'>Ͽ osisEnd=Ͼ</hi></hi></p>Ͽ)


stepUsxToOsisTagTranslation=(usx=Ͼpara:srϿ osis=Ͼ<hi type='italic'>Ͽ) #! A section division references range heading.

#! This isn't a valid USX tag at all.  However, where USFM contains \sts (indicating
#! text status information), Paratext passes it through into the USX as para:sts.
stepUsxToOsisTagTranslation=(usx=Ͼpara:stsϿ action=ϾsuppressContentϿ)

stepUsxToOsisTagTranslation=(usx=Ͼpara:toc1Ͽ action=ϾsuppressContentϿ) #! Long table of contents text.
stepUsxToOsisTagTranslation=(usx=Ͼpara:toc2Ͽ action=ϾsuppressContentϿ) #! Short table of contents text.
stepUsxToOsisTagTranslation=(usx=Ͼpara:toc3Ͽ action=ϾsuppressContentϿ) #! Book Abbreviation.




      
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Table tags ...
#!
#! Complicated as ever.  According to the USX 3 spec, USX supports the
#! following :-
#!
#! * <table>
#!
#! * <row>: According to the spec this may optionally contain a style attribute,
#!     but this appears to be there only to reflect details of the USFM from
#!     which the USX may have been derived, and is effectively redundant.
#!
#! * <cell>: Like <row>, this may contain a style attribute.  Once again, the
#!     USX spec suggests this information is effectively redundant, although I'm
#!     not 100% sure this is so: it contains alignment information, which is
#!     indeed available from the 'align' attribute more directly, but it looks
#!     as though it also distinguishes between header and non-header rows, and
#!     there is nothing else which does this.  Plus if USX is being taken from
#!     somewhere other than a Paratext conversion of USFM, I'm not clear
#!     whether we can rely upon having the align parameter.  Anyway, as regards
#!     the align parameter, the options are start, center and end (note that -
#!     not left, center and right).  From USX 3, <cell> can also have a colspan
#!     attribute (colspan='2' or whatever).
#!
#!
#! So much for USX.  OSIS provides the following :-
#!
#! * <table>
#!
#! * <row type='label | data'>: I presume 'label' is the default.
#!
#! * <cell align='left | center | right | justify | start | end'>: _I assume_
#!   presume the default is left, and that start and end are the same as left
#!   and right respectively, but the documentation does not state as much.  Note
#!   that there is no colspan equivalent.
#!
#!
#! That, however, is only the _official_ version of OSIS according to the
#! reference manual.  Experience with the STEP CYM module suggests that if you
#! endeavour to follow these rules, you will end up with something which simply
#! does not render.  After some appreciable degree of experimentation, it looks
#! as though you actually need to use :-
#!
#! * <table type='x-simpleTable'>
#! * <row type='x-simpleTable-row'>
#! * <cell type='x-simpleTable-cell-left'>
#!
#! As regards the last of these, I presume options other than 'left' are
#! available, but have yet to confirm this or find out what they are.  Also
#! I have no idea whether there is support for anything _other_ than a 'simple'
#! table.  And, for that matter, I have no idea what it is which is supporting
#! or demanding these different definitions - osis2mod or STEP.
#!
#! Also I don't presently know if there is any way of marking header cells as
#! such, so I am treating tc and th as being the same thing.
#!
#! The translations below assume no attempt to simulate colspan, nor the
#! 'redundant' USX style attributes on table row or cell.
#!
#! Note also that OSIS / Sword does not support tables which cross verse
#! boundaries.  If you want to achieve this effect, you have to remove all
#! verse boundaries from within the table (perhaps replacing them with some
#! text to mark where the boundaries fell).  You then have to put the entire
#! text within the verse where the table started, but in the osisID for that
#! verse you name all the verses which make up the table, space-separated.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=ϾtableϿ osis=Ͼ<table type='x-simpleTable'>Ͽ) #! Table.

stepUsxToOsisTagTranslation=(usx=Ͼrow:trϿ osis=Ͼ<row type='x-simpleTable-row'>Ͽ) #! Table-row.

stepUsxToOsisTagTranslation=(usx=Ͼcell:tc1Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tc2Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tc3Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tc4Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tc5Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.

stepUsxToOsisTagTranslation=(usx=Ͼcell:tcc1Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tcc2Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tcc3Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tcc4Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tcc5Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.

stepUsxToOsisTagTranslation=(usx=Ͼcell:tcr1Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tcr2Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tcr3Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tcr4Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:tcr5Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.

stepUsxToOsisTagTranslation=(usx=Ͼcell:th1Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:th2Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:th3Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:th4Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:th5Ͽ osis=Ͼ<cell type='x-simpleTable-cell-@align'>Ͽ) #! Table-cell.

stepUsxToOsisTagTranslation=(usx=Ͼcell:thc1Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:thc2Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:thc3Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:thc4Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:thc5Ͽ osis=Ͼ<cell type='x-simpleTable-cell-center'>Ͽ) #! Table-cell.

stepUsxToOsisTagTranslation=(usx=Ͼcell:thr1Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:thr2Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:thr3Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:thr4Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.
stepUsxToOsisTagTranslation=(usx=Ͼcell:thr5Ͽ osis=Ͼ<cell type='x-simpleTable-cell-right'>Ͽ) #! Table-cell.





#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Miscellaneous tags.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=ϾoptbreakϿ osis=Ͼ<lb/>Ͽ)
stepUsxToOsisTagTranslation=(usx=ϾrefϿ osis=Ͼ<reference osisRef='@AsOsisRef_loc'>Ͽ)
stepUsxToOsisTagTranslation=(usx=ϾusxϿ osisStart=ϾϿ osisEnd=Ͼ</div>Ͽ)



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Non-USX tags.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#! This isn't actually a valid USX tag.  It turned up in one text which we took from eBible,
#! so I'm assuming it may turn up in others too.  So far as I can see, we simply need
#! to ignore it.  In the examples I've seen it doesn't have any content, but for safety's
#! sake I'm going to ignore the content too.

stepUsxToOsisTagTranslation=(usx=ϾunmatchedϿ action=ϾsuppressContentϿ)





#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! STEP-internal tags.  Note that not all of these are necessarily used
#! presently (for example because currently we do not enclose bullet points,
#! poetry, etc), but I have retained these unused ones to save a little work
#! should we ever need them in future.  I make it clear where they are not
#! presently used.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Structural elements.  Note, incidentally, that _X_verseSid and _X_verseEid
#! are not exactly proper tags.  The USX-to-OSIS processing converts verse sid
#! and verse eid to them to make them more readily distinguished.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=Ͼ_X_usxϿ osis=ϾϿ />
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bookϿ osis=Ͼ<div type='book' osisID='@currentRefLow_b' canonical='false'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_chapterϿ osis=Ͼ<chapter osisID='@currentRefLow_bc'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_verseSidϿ osisStart=Ͼ<verse osisID='@currentRefAsRefs' sID='@currentRefAsRange' />Ͽ osisEnd=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_verseEidϿ osisStart=Ͼ<verse eID='@currentRefAsRange' />Ͽ osisEnd=ϾϿ)



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Miscellaneous.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=Ͼ_X_commentϿ action=ϾsuppressContentϿ)                   #! NOT PRESENTLY USED, but intended to allow us to lodge comments as pukka tags.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_contentOnlyϿ osis=ϾϿ)                                #! Retain content, but don't reflect the owning tag itself in the output.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_forceVersePerLineBreakϿ osis=Ͼ<lb/>Ͽ)                #! Used in particular on RTL texts, where we have to force verse-per-line to get round a bug in the rendering.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_headingBlockϿ osis=ϾϿ)                               #! Groups headings together to simplify processing.  Just want the content.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_introductionBlock:bookϿ action=ϾsuppressContentϿ)    #! Introductory material.  At present we suppress this.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_introductionBlock:chapterϿ action=ϾsuppressContentϿ) #! Introductory material.  At present we suppress this.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_listTotalϿ osis=Ͼ<hi type='italic'>Ͽ)                #! List total -- eg the 12 in 'Manasseh 12'.  Should really be right-justified, but we can't do that.  Possibly need to add a colon here before the field, but that's going to be text-specific.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_subverseSeparatorϿ action=ϾsuppressContentϿ)         #! We collapse subverses in the final USX.  This would give us the chance to record details if we do something other than suppress.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_suppressContentϿ action=ϾsuppressContentϿ)           #! Ditch the tag and its content.
stepUsxToOsisTagTranslation=(usx=Ͼ_X_reversificationMoveOriginalTextϿ osis=Ͼ<hi type='italic'>Ͽ)  #! On reversification Moves we retain a copy of the original text in situ, but need to format it to make it less prominent.



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Tables.
#!
#! The processing supports various alternative ways of handling tables.  One
#! of these involves eliding all of the verses which make up the table and
#! storing the elided details as the content of a single verse.  In this case,
#! I allow for the possibility that we may want to insert some kind of markers
#! into the contents to indicate where the verse boundaries originally fell.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=Ͼ_X_verseBoundaryWithinElidedTableϿ osis=Ͼ<hi type='super'>Ͽ)



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Reversification callouts.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=Ͼ_X_reversificationCalloutDataϿ osisϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_reversificationCalloutAlternativeRefCollectionϿ osisStart=Ͼ<hi type='super'>Ͽ osisEnd=Ͼ</hi> Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_reversificationCalloutSourceRefCollectionϿ osisStart=Ͼ<hi type='bold'>Ͽ osisEnd=Ͼ</hi> Ͽ)



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Strongs / char:w
#!
#! In USX, char:w is used for various purposes, including Strong's.  Strong's
#! needs special processing, so early in the overall flow of control I change
#! char:w to _X_strong where it is being used for Strong's, leaving other uses
#! of char:w (along with the associated variants char:wa, char:wg and char:wh)
#! to be picked up and handled by other definitions in this file.
#!
#! The pukka Strong's usage is handled by the definition below.
#!
#! One further point: OSIS supports a 'morph' tag to hold morphology.  I have
#! been unable to find any USX equivalent, either on this tag or anywhere else.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=Ͼ_X_strongϿ osis=Ͼ<w @allAttributes>Ͽ)




#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! List bracketing NOT PRESENTLY USED
#!
#! In theory, OSIS requires bracketing constructs -- the equivalent of HTML's
#! <ul> -- around lists and poetry etc.  In practice we're not currently
#! supplying this (USX doesn't have it, generating it is a pain, and the result
#! if we do looks worse on screen than if we don't; the main snag is that by
#! not generating these constructs we end up with non-compliant OSIS, but we've
#! decided we'll have to live with that).
#!
#! Anyway, just in case we ever change our minds, I've got a whole raft of
#! things below, one for each flavour of thing which might require bracketing.
#!
#! **** DON'T assume that I have thought about these at all -- I haven't.
#! In fact, I'm not even sure how feasible it is to create bracketing
#! constructs, given the likelihood that the individual elements may run across
#! verse boundaries.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:iliϿ  osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:ili1Ͽ osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:ili2Ͽ osis=Ͼ<l level='2'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:ili3Ͽ osis=Ͼ<l level='3'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:ili4Ͽ osis=Ͼ<l level='4'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:ioϿ   osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:io1Ͽ  osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:io2Ͽ  osis=Ͼ<l level='2'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:io3Ͽ  osis=Ͼ<l level='3'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:io4Ͽ  osis=Ͼ<l level='4'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:isϿ   osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:is1Ͽ  osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:is2Ͽ  osis=Ͼ<l level='2'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:is3Ͽ  osis=Ͼ<l level='3'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:is4Ͽ  osis=Ͼ<l level='4'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:liϿ   osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:li1Ͽ  osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:li2Ͽ  osis=Ͼ<l level='2'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:li3Ͽ  osis=Ͼ<l level='3'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:li4Ͽ  osis=Ͼ<l level='4'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:piϿ   osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:pi1Ͽ  osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:pi2Ͽ  osis=Ͼ<l level='2'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:pi3Ͽ  osis=Ͼ<l level='3'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:pi4Ͽ  osis=Ͼ<l level='4'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:qϿ    osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:q1Ͽ   osis=Ͼ<l level='1'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:q2Ͽ   osis=Ͼ<l level='2'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:q3Ͽ   osis=Ͼ<l level='3'>Ͽ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketStart:q4Ͽ   osis=Ͼ<l level='4'>Ͽ)

stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:iliϿ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:ili1Ͽ osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:ili2Ͽ osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:ili3Ͽ osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:ili4Ͽ osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:ioϿ   osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:io1Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:io2Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:io3Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:io4Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:isϿ   osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:is1Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:is2Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:is3Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:is4Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:liϿ   osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:li1Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:li2Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:li3Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:li4Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:piϿ   osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:pi1Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:pi2Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:pi3Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:pi4Ͽ  osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:qϿ    osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:q1Ͽ   osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:q2Ͽ   osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:q3Ͽ   osis=ϾϿ)
stepUsxToOsisTagTranslation=(usx=Ͼ_X_bracketEnd:q4Ͽ   osis=ϾϿ)





#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Not yet handled.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepUsxToOsisTagTranslation=(usx=Ͼchar:addpnϿ tbd) #! For chinese words to be dot underline & underline (DEPRECATED - used nested char@style pn).
stepUsxToOsisTagTranslation=(usx=Ͼchar:caϿ tbd) #! Second (alternate) chapter number.
stepUsxToOsisTagTranslation=(usx=Ͼchar:dcϿ tbd) #! Deuterocanonical/LXX additions or insertions in the Protocanonical text.
stepUsxToOsisTagTranslation=(usx=Ͼchar:efmϿ tbd) #! Reference to caller of previous footnote in a study Bible.
stepUsxToOsisTagTranslation=(usx=Ͼchar:catϿ tbd) #! Note category (study Bible).
stepUsxToOsisTagTranslation=(usx=Ͼchar:fwϿ tbd) #! A footnote witness list, for distinguishing a list of sigla representing witnesses in critical editions.
stepUsxToOsisTagTranslation=(usx=Ͼchar:fdcϿ tbd) #! Footnote text, applies to Deuterocanon only (DEPRECATED - use char@style dc).
stepUsxToOsisTagTranslation=(usx=Ͼchar:jmpϿ tbd) #! For associating linking attributes to a span of text.
stepUsxToOsisTagTranslation=(usx=Ͼchar:ndxϿ tbd) #! A subject index text item.
stepUsxToOsisTagTranslation=(usx=Ͼchar:noϿ tbd) #! A character style, use normal text.
stepUsxToOsisTagTranslation=(usx=Ͼchar:pngϿ tbd) #! For a geographic proper name.
stepUsxToOsisTagTranslation=(usx=Ͼchar:proϿ tbd) #! For indicating pronunciation in CJK texts (DEPRECATED - used char@style rb).
stepUsxToOsisTagTranslation=(usx=Ͼchar:sigϿ tbd) #! For the signature of the author of an Epistle.

stepUsxToOsisTagTranslation=(usx=Ͼpara:h1Ͽ tbd) #! Running header text (DEPRECATED).
stepUsxToOsisTagTranslation=(usx=Ͼpara:h2Ͽ tbd) #! Running header text, left side of page (DEPRECATED).
stepUsxToOsisTagTranslation=(usx=Ͼpara:h3Ͽ tbd) #! Running header text, right side of page (DEPRECATED).
stepUsxToOsisTagTranslation=(usx=Ͼpara:k1Ͽ tbd) #! Concordance main entry text or keyword, level 1.
stepUsxToOsisTagTranslation=(usx=Ͼpara:k2Ͽ tbd) #! Concordance main entry text or keyword, level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:lfϿ tbd) #! List footer (introductory remark).
stepUsxToOsisTagTranslation=(usx=Ͼpara:lhϿ tbd) #! List header (introductory remark).
stepUsxToOsisTagTranslation=(usx=Ͼpara:limϿ tbd) #! An embedded list entry, level 1 (if single level).
stepUsxToOsisTagTranslation=(usx=Ͼpara:lim1Ͽ tbd) #! An embedded list entry, level 1 (if multiple levels).
stepUsxToOsisTagTranslation=(usx=Ͼpara:lim2Ͽ tbd) #! An embedded list entry, level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:lim3Ͽ tbd) #! An embedded list entry, level 3.
stepUsxToOsisTagTranslation=(usx=Ͼpara:lim4Ͽ tbd) #! An embedded list entry, level 4.
stepUsxToOsisTagTranslation=(usx=Ͼpara:litϿ tbd) #! For a comment or note inserted for liturgical use.
stepUsxToOsisTagTranslation=(usx=Ͼpara:ms3Ͽ tbd) #! A major section division heading, level 3.
stepUsxToOsisTagTranslation=(usx=Ͼpara:mteϿ tbd) #! The main title of the book repeated at the end of the book, level 1 (if single level).
stepUsxToOsisTagTranslation=(usx=Ͼpara:mte1Ͽ tbd) #! The main title of the book repeat /ed at the end of the book, level 1 (if multiple levels).
stepUsxToOsisTagTranslation=(usx=Ͼpara:mte2Ͽ tbd) #! A secondary title occurring before or after the 'endingϿ main title.
stepUsxToOsisTagTranslation=(usx=Ͼpara:p1Ͽ tbd) #! Front or back matter text paragraph, level 1 (if multiple levels).
stepUsxToOsisTagTranslation=(usx=Ͼpara:p2Ͽ tbd) #! Front or back matter text paragraph, level 2 (if multiple levels).
stepUsxToOsisTagTranslation=(usx=Ͼpara:pbϿ tbd) #! Page Break used for new reader portions and children's bibles where content is controlled by the page.
stepUsxToOsisTagTranslation=(usx=Ͼpara:poϿ tbd) #! Letter opening.
stepUsxToOsisTagTranslation=(usx=Ͼpara:prϿ tbd) #! Text refrain (paragraph right-aligned).
stepUsxToOsisTagTranslation=(usx=Ͼpara:qaϿ tbd) #! Poetry text, Acrostic marker/heading.
stepUsxToOsisTagTranslation=(usx=Ͼpara:qdϿ tbd) #! A Hebrew musical performance annotation, similar in content to Hebrew descriptive title.
stepUsxToOsisTagTranslation=(usx=Ͼpara:restoreϿ tbd) #! Comment about when text was restored.
stepUsxToOsisTagTranslation=(usx=Ͼpara:sdϿ tbd) #! Vertical space used to divide the text into sections, level 1 (if single level).
stepUsxToOsisTagTranslation=(usx=Ͼpara:sd1Ͽ tbd) #! Semantic division location (vertical space used to divide the text into sections), level 1 (if multiple levels).
stepUsxToOsisTagTranslation=(usx=Ͼpara:sd2Ͽ tbd) #! Semantic division location (vertical space used to divide the text into sections), level 2.
stepUsxToOsisTagTranslation=(usx=Ͼpara:sd3Ͽ tbd) #! Semantic division location (vertical space used to divide the text into sections), level 3.
stepUsxToOsisTagTranslation=(usx=Ͼpara:sd4Ͽ tbd) #! Semantic division location (vertical space used to divide the text into sections), level 4.
stepUsxToOsisTagTranslation=(usx=Ͼpara:spϿ tbd) #! A heading, to identify the speaker (e.g. Job).
stepUsxToOsisTagTranslation=(usx=Ͼpara:toca1Ͽ tbd) #! Alternative language long table of contents text.
stepUsxToOsisTagTranslation=(usx=Ͼpara:toca2Ͽ tbd) #! Alternative language short table of contents text.
stepUsxToOsisTagTranslation=(usx=Ͼpara:toca3Ͽ tbd) #! Alternative language book Abbreviation.
stepUsxToOsisTagTranslation=(usx=Ͼpara:tsϿ tbd) #! Translator's chunk (to identify chunks of text suitable for translating at one time)
