#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! We often pick up a number of texts from the same source, and in such cases
#! the accompanying metadata (and licence file if one is available )will often
#! contain information we need for our own purposes, and may be in a standard
#! form, such that it is worth putting a little effort into describing how to
#! obtain that data from these files directly, rather than have to transcribe
#! manually it into our own format.
#!
#! This is the case for the Digital Bible Library (DBL), which supplies
#! both metadata and licence information in a standard XML format. I have
#! XPath-based processing which will pick up selected information from general
#! XML files, and this present configuration file says what XPath should be used
#! when extracting STEP configuration information from these DBL files.
#!
#! Hopefully you will not need to create a per-text analogue of this file,
#! although having said that, it is very difficult to find documentation for the
#! DBL metadata, and as a result of that it is not set up by different
#! translators in a consistent style.  Anyway, if you _do_ need to tailor this
#! for different texts (or indeed if you want to set up similar processing for
#! some other XML data format) the notes below may be of some help.
#!
#!
#!
#! The definitions below assign to various configuration parameters the
#! instructions needed to obtain them.  (The parameters only assume actual
#! values if something access them.  Up to that point they remain just as
#! instructions.)
#!
#! Most or all statements involve a $getExternalXml call, which invokes
#! the processing to obtain data from an externally-supplied XML file.
#!
#! In some cases this is wrapped up in additional processing -- for example
#! to convert the data to some standard format.
#!
#! A typical $getExternalXml line looks like:
#!
#!   x=$getExternalXml("metadata", "DBLMetadata/archiveStatus/dateUpdated", "DBL/archiveStatus/dateArchived", "DBLMetadata/identification/dateCompleted")
#!
#! Here, the first argument tells the processing which file to access (the
#! metadata file or the licence file); and the remaining arguments are
#! XPaths indicating what data to pick up.  $getExternalXml examines each
#! in turn until it finds something which returns a value.  If none returns
#! a value, it returns null.
#!
#! Incidentally, don't read anything into the fact that the arguments in the
#! example above all start DBLMetadata.  This is not something significant to
#! the processing: it just happens that the top level tag in XML metadata files
#! is <DBLMetadata>.
#!
#! There is no need to include this file overtly: provided there is a
#! parameter stepExternalDataFormat with the value 'DBL', the processing
#! will include it automatically.
#!
#! Note, incidentally, that the assignments here are all what I call
#! elsewhere 'vanilla' (ie they involve '=' rather than '#=').  I arrange for
#! them to come out relatively late in the load sequence, so that they will
#! override other vanilla assignments, but you can set up forcible
#! assignments if necessary to override them.
#!
#! For this processing to work, you need to have set up one or both of
#! stepExternalMetadataFileName and stepExternalLicenceFileName.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Repository organisation.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

swordTextRepositoryOrganisationAbbreviatedName=DBL #! Force DBL here.
swordTextRepositoryOrganisationFullName=Digital Bible Library
swordTextOwnerOrganisationWebsiteLinkOrDescription=<a href='$constExternalDataPath_DblWebsite'>$stepTextRepositoryOrganisationFullName</a>
swordShortPromo=$getExternalXml("metadata", "DBLMetadata/promotion/promoVersionInfo")



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Standard file names.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepExternalMetadataFileName=@find/metadata.xml
stepExternalLicenceFileName=@find/license.xml



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Details of the Bible text.
#!
#! I'm not 100% certain about the id.  I want something which ties the text
#! back to any specific id which may have been supplied either by the owner or
#! the repository.  And at the same time I have to recognise that it is just
#! feasible that different organisations may use the same ids for their texts.
#! I therefore prefix any id by the abbreviated name of the repository.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

swordTextIdSuppliedBySourceRepositoryOrOwnerOrganisation=$swordTextRepositoryOrganisationAbbreviatedName:$choose($getExternalXml("metadata", "DBLMetadata/@id"), "???")
swordTextVersionSuppliedBySourceRepositoryOrOwnerOrganisation=$swordTextRepositoryOrganisationAbbreviatedName:$choose($getExternalXml("metadata", "DBLMetadata/@revision"), "???")
calcSupplierUpdateReason=$choose($getExternalXml("metadata", "DBLMetadata/archiveStatus/comments"), "")

stepBibleNameEnglishAsSupplied=$getExternalXml("metadata", "DBLMetadata/identification/name")
stepBibleNameVernacularAsSupplied=$choose($getExternalXml("metadata", "DBLMetadata/identification/nameLocal", "DBLMetadata/publications/publication/nameLocal", "DBLMetadata/identification/name"), $stepBibleNameEnglishAsSupplied)

stepAbbreviationEnglishAsSupplied=$getExternalXml("metadata", "DBLMetadata/identification/abbreviation")
stepAbbreviationVernacularAsSupplied=$choose($getExternalXml("metadata", "DBLMetadata/identification/abbreviation", "DBLMetadata/publications/publication/abbreviationLocal"), $stepAbbreviationEnglishAsSupplied)



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Details of the language.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

calcLanguageCodeAsSupplied=$getExternalXml("metadata", "DBLMetadata/language/iso")
calcScriptCodeAsSupplied=$getExternalXml("metadata", "DBLMetadata/language/scriptCode")
calcCountryCodeAsSupplied=$getExternalXml("metadata", "DBLMetadata/countries/country/iso")
calcTextDirection=$choose($getExternalXml("metadata", "DBLMetadata/language/scriptDirection"), "LTR")
NOT_USED_stepSuppliedLanguageNameEnglish=$getExternalXml("metadata", "DBLMetadata/language/name")
NOT_USED_stepSuppliedLanguageNameVernacular=$getExternalXml("metadata", "DBLMetadata/language/nameLocal")



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Version information.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

stepTextModifiedDate=$toDate("yyyy-MM-dd", "yyyy-MM-dd", $getExternalXml("metadata", "DBLMetadata/archiveStatus/dateUpdated", "DBL/archiveStatus/dateArchived", "DBLMetadata/identification/dateCompleted"))



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#!
#! Licensing information.
#!
#! At this point I have little experience of what might be useful, and also to
#! what extent the information here is specific to DBL or to what extent it
#! might be generally available.  Presently, therefore, some of the stuff
#! below -- the 'CanAdd' stuff in particular -- is very speculative: if DBL is
#! the only source from which it can be obtained, there may not be much point in
#! accumulating it here.
#!
#! This information is used only for administrative purposes (if, indeed, it is
#! used at all).  The only place it appears is in the stylised comment at the
#! top of the Sword config file, and not all of it appears there.
#!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

calcIsOkToAddCrossReferences=$choose($getExternalXml("licence", "license/publicationRights/allowCrossReferences"), "No")
calcIsOkToAddFootnotes=$choose($getExternalXml("licence", "license/publicationRights/allowFootnotes"), $getExternalXml("licence", "license/publicationRights/allowExtendedNotes"), "No")
calcIsOkToAddIntroductions=$choose($getExternalXml("licence", "license/publicationRights/allowIntroductions"), "No")
calcLicenceExpiryDate=$choose($getExternalXml("licence", "license/dateLicenseExpiry"), "3000-01-01")
calcLicenceId=$swordTextRepositoryOrganisationAbbreviatedName:$choose($getExternalXml("licence", "license/@id"), "Unknown")
